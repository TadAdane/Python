# Implementation of classic acarde game pong
import simplegui
import random

# Initialize globals - pos and vel encode vertical info for paddles
WIDTH = 600
HEIGHT = 400
BALL_RADIUS = 20
PAD_WIDTH = 8
PAD_HEIGHT = 80
HALF_PAD_WIDTH = PAD_WIDTH/2
HALF_PAD_HEIGHT = PAD_HEIGHT/2
LEFT = False
RIGHT = True
ball_pos = [WIDTH/2, HEIGHT/2]
ball_vel = [0, 0]
paddle1_pos = [0, 0]
paddle2_pos = [WIDTH, HEIGHT]
paddle1_vel = [0, 0]
paddle2_vel = [0, 0]
player_one_score = 0
player_two_score = 0

# Initialize ball_pos and ball vel for new in middle of table
# if direction is RIGHT, the ball's velocity is upper right, else upper left
def spawn_ball(direction):
    global ball_pos, ball_vel
    ball_vel[1] = random.randrange(-2, 0)
    if direction == RIGHT:
        ball_vel[0] = random.randrange(-3, -1)
        ball_pos = [WIDTH/2, HEIGHT/2]
    elif direction == LEFT:
        ball_vel[0] = random.randrange(2, 4)
        ball_pos = [WIDTH/2, HEIGHT/2]
    
# Define event handlers
def new_game():
    global paddle1_pos, paddle2_pos, paddle1_vel, paddle2_vel
    global player_one_score, player_two_score
    player_one_score = 0
    player_two_score = 0
    paddle1_pos = [0, 160]
    paddle2_pos = [WIDTH, 240]
    spawn_ball(RIGHT)

def draw(canvas):
    global score1, score2, paddle1_pos, paddle2_pos, ball_pos, ball_vel, player_one_score, player_two_score
    canvas.draw_line([WIDTH / 2, 0],[WIDTH / 2, HEIGHT], 1, "white")
    canvas.draw_line([PAD_WIDTH, 0],[PAD_WIDTH, HEIGHT], 1, "white")
    canvas.draw_line([WIDTH - PAD_WIDTH, 0],[WIDTH - PAD_WIDTH, HEIGHT], 1, "white")
    
    # Update ball
    ball_pos[0] += ball_vel[0]
    ball_pos[1] += ball_vel[1]
    if ball_pos[0] <= BALL_RADIUS + HALF_PAD_WIDTH:
        player_two_score += 1
        spawn_ball(LEFT)
    elif ball_pos[0] >= WIDTH - (BALL_RADIUS + HALF_PAD_WIDTH): 
        player_one_score += 1
        spawn_ball(RIGHT)
    if ball_pos[1] <= BALL_RADIUS:
        ball_vel[1] = -ball_vel[1]
    elif ball_pos[1] >= HEIGHT - BALL_RADIUS:
        ball_vel[1] = -ball_vel[1]
    
    # Draw ball
    canvas.draw_circle(ball_pos,BALL_RADIUS,2,"white", "white")   
    
    # Update paddle's vertical postion, keep paddle on the screen
    paddle1_pos[0] += paddle1_vel[0]
    paddle1_pos[1] += paddle1_vel[1]
    paddle2_pos[0] += paddle2_vel[0]
    paddle2_pos[1] += paddle2_vel[1]
    
    if paddle1_pos[1] <= 0:
        paddle1_vel[1] = 0
    elif paddle1_pos[1]+PAD_HEIGHT >= HEIGHT:
        paddle1_vel[1] = 0
    if paddle2_pos[1]-PAD_HEIGHT <= 0:
        paddle2_vel[1] = 0
    elif paddle2_pos[1] >= HEIGHT:
        paddle2_vel[1] = 0
        
    # Draw paddles
    canvas.draw_polygon([paddle1_pos, [paddle1_pos[0] + PAD_WIDTH,paddle1_pos[1]],[paddle1_pos[0] + PAD_WIDTH,paddle1_pos[1] + PAD_HEIGHT],[paddle1_pos[0],paddle1_pos[1] + PAD_HEIGHT]],2,"white","white")    
    canvas.draw_polygon([paddle2_pos, [paddle2_pos[0] - PAD_WIDTH,paddle2_pos[1]],[paddle2_pos[0] - PAD_WIDTH,paddle2_pos[1] - PAD_HEIGHT],[paddle2_pos[0],paddle2_pos[1] - PAD_HEIGHT]],2,"white","white")
    
    # Determine whether paddle and ball collide
    if ball_pos[0] <= paddle1_pos[0] + PAD_WIDTH+BALL_RADIUS and ball_pos[1] in range(paddle1_pos[1], paddle1_pos[1] + 80):
        ball_vel[0] = -(ball_vel[0] + ball_vel[0] * (1 / 10))
    elif ball_pos[0] >= paddle2_pos[0]-(PAD_WIDTH+BALL_RADIUS) and ball_pos[1] in range(paddle2_pos[1] - 80, paddle2_pos[1]):
        ball_vel[0] = -(ball_vel[0] + ball_vel[0] * (1 / 10))    
    
    # Draw scores
    canvas.draw_text(str(player_one_score),[146, 75], 40, 'white')
    canvas.draw_text(str(player_two_score),[446, 75], 40, 'white')

def keydown(key):
    global paddle1_vel, paddle2_vel
    if key == simplegui.KEY_MAP["w"]:
        paddle1_vel[1] -= 5
    elif key == simplegui.KEY_MAP["s"]:
        paddle1_vel[1] += 5
    if key == simplegui.KEY_MAP["up"]:
        paddle2_vel[1] -= 5
    elif key == simplegui.KEY_MAP["down"]:
        paddle2_vel[1] += 5
                                          
def keyup(key):                                             
    global paddle1_vel, paddle2_vel
    paddle1_vel[1] = 0
    paddle2_vel[1] = 0
                                             
# Create frame
frame = simplegui.create_frame("Pong", WIDTH, HEIGHT)
frame.set_draw_handler(draw)
frame.set_keydown_handler(keydown)
frame.set_keyup_handler(keyup)
button1 = frame.add_button("Restart",new_game,100)
                                             
# Start frame
new_game()
frame.start()
